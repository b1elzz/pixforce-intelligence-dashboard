package com.pixforce.insights_search.entity;

/**
 * ===========================================
 * CATEGORIAS DE NOT√çCIAS - ENUM
 * ===========================================
 * 
 * Define as categorias poss√≠veis para classificar not√≠cias processadas pela IA.
 * Cada categoria representa um tipo de insight estrat√©gico para a PixForce.
 * 
 * CATEGORIAS DISPON√çVEIS:
 * - PRODUTO: Novos produtos, tecnologias, inova√ß√µes no mercado
 * - PARCERIA: Oportunidades de parceria, colabora√ß√µes, alian√ßas
 * - ESTRATEGIA: Movimentos estrat√©gicos, tend√™ncias, mudan√ßas no mercado
 * 
 * @author Equipe PixForce
 * @version 1.0.0
 * @since 2025-01-27
 */
public enum Category {
    
    /**
     * üß© PRODUTO
     * 
     * Not√≠cias relacionadas a:
     * - Novos produtos ou tecnologias
     * - Lan√ßamentos de solu√ß√µes de IA/Vis√£o Computacional
     * - Inova√ß√µes t√©cnicas
     * - Updates de produtos existentes
     */
    PRODUTO("üß© Produto", "Novos produtos, tecnologias e inova√ß√µes no mercado"),
    
    /**
     * ü§ù PARCERIA
     * 
     * Not√≠cias relacionadas a:
     * - Oportunidades de parceria
     * - Colabora√ß√µes entre empresas
     * - Alian√ßas estrat√©gicas
     * - Joint ventures
     */
    PARCERIA("ü§ù Parceria", "Oportunidades de parceria e colabora√ß√µes"),
    
    /**
     * üìà ESTRATEGIA
     * 
     * Not√≠cias relacionadas a:
     * - Movimentos estrat√©gicos de mercado
     * - Tend√™ncias da ind√∫stria
     * - Mudan√ßas regulat√≥rias
     * - An√°lises de mercado
     */
    ESTRATEGIA("üìà Estrat√©gia", "Movimentos estrat√©gicos e tend√™ncias do mercado");
    
    private final String displayName;
    private final String description;
    
    /**
     * Construtor do enum Category.
     * 
     * @param displayName Nome amig√°vel para exibi√ß√£o
     * @param description Descri√ß√£o detalhada da categoria
     */
    Category(String displayName, String description) {
        this.displayName = displayName;
        this.description = description;
    }
    
    /**
     * Retorna o nome amig√°vel da categoria para exibi√ß√£o.
     * 
     * @return Nome formatado com emoji
     */
    public String getDisplayName() {
        return displayName;
    }
    
    /**
     * Retorna a descri√ß√£o detalhada da categoria.
     * 
     * @return Descri√ß√£o explicativa
     */
    public String getDescription() {
        return description;
    }
    
    /**
     * Retorna a categoria baseada no nome (case-insensitive).
     * 
     * @param name Nome da categoria
     * @return Category correspondente ou null se n√£o encontrada
     */
    public static Category fromName(String name) {
        if (name == null) return null;
        
        for (Category category : values()) {
            if (category.name().equalsIgnoreCase(name)) {
                return category;
            }
        }
        return null;
    }
}
